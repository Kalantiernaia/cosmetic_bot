import os
import logging
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

# ========= –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) =========
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger(__name__)


# ========= –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è =========
load_dotenv()  # –µ—Å–ª–∏ –µ—Å—Ç—å .env-—Ñ–∞–π–ª –ª–æ–∫–∞–ª—å–Ω–æ
TG_TOKEN    = os.environ["TG_TOKEN"]
RAILWAY_URL = os.environ["RAILWAY_URL"]   # —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ https://your-app.up.railway.app
PORT        = int(os.environ.get("PORT", 5000))


# ========= –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π =========
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ –∏–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–∞–≤–∞ –∫–æ—Å–º–µ—Ç–∏–∫–∏ ‚Äî —è –µ–≥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é."
    )

async def analyze(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # TODO: —Å—é–¥–∞ –≤–∞—à –∫–æ–¥ OCR / –∞–Ω–∞–ª–∏–∑–∞ —Å–æ—Å—Ç–∞–≤–∞
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–≥–ª–∏ —Å–¥–µ–ª–∞—Ç—å:
    #   text = ocr_recognize(update.message.photo[-1].file_id)
    #   result = analyze_ingredients(text)
    #   await update.message.reply_text(result)
    #
    # –ê –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–∑–æ–≤—ë–º—Å—è —ç—Ö–æ:
    incoming = ""
    if update.message.photo:
        incoming = "üì∑ –ø–æ–ª—É—á–∏–ª —Ñ–æ—Ç–æ, –Ω–æ OCR –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω."
    else:
        incoming = update.message.text or "ü§î –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    await update.message.reply_text(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞: ¬´{incoming}¬ª")


# ========= –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è =========
def main() -> None:
    application = Application.builder().token(TG_TOKEN).build()

    # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã
    application.add_handler(CommandHandler("start", start))
    application.add_handler(
        MessageHandler(filters.PHOTO | filters.TEXT, analyze)
    )

    # ========== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Webhook =========
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook (–µ—Å–ª–∏ –±—ã–ª)
    application.bot.delete_webhook(drop_pending_updates=True)

    # –ü—É—Ç—å, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π Telegram –±—É–¥–µ—Ç —Å–ª–∞—Ç—å POST‚Äë–∑–∞–ø—Ä–æ—Å—ã
    webhook_path = f"/hook/{TG_TOKEN}"

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
    application.bot.set_webhook(f"{RAILWAY_URL}{webhook_path}")

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤–µ–±‚Äë—Å–µ—Ä–≤–µ—Ä –Ω–∞ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö
    application.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_path=webhook_path,
        url_path=webhook_path,
        drop_pending_updates=True,
    )


if __name__ == "__main__":
    main()

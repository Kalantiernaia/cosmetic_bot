import os
import logging
from dotenv import load_dotenv
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from telegram import Update

# 1) –ó–∞–≥—Ä—É–∑–∫–∞ .env
load_dotenv()
TG_TOKEN       = os.environ["TG_TOKEN"]
OPENAI_API_KEY = os.environ["OPENAI_API_KEY"]   # –µ—Å–ª–∏ –Ω—É–∂–µ–Ω
RAILWAY_URL    = os.environ["RAILWAY_URL"]

# 2) –ü–æ—Ä—Ç –∏ –ø—É—Ç—å –±–µ—Ä—ë–º –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –¥–µ—Ñ–æ–ª—Ç–∞–º–∏
PORT     = int(os.environ.get("PORT", 5000))
URL_PATH = f"/hook/{TG_TOKEN}"
WEBHOOK_URL = f"{RAILWAY_URL}{URL_PATH}"

# 3) –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger(__name__)

# 4) –ü—Ä–∏–º–µ—Ä —Ö–µ–Ω–¥–ª–µ—Ä–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ—Å–º–µ—Ç–∏–∫–∏.")

# 5) –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
def main():
    # 5.1) –°–æ–∑–¥–∞—ë–º Application
    app = ApplicationBuilder().token(TG_TOKEN).build()

    # 5.2) –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã
    app.add_handler(CommandHandler("start", start))
    # TODO: —Ç—É—Ç –≤–∞—à–∏ OCR/–∞–Ω–∞–ª–∏–∑‚Äë—Ö–µ–Ω–¥–ª–µ—Ä—ã

    # 5.3) –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±—Ö—É–∫
    #
    # –í–∞–∂–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º url_path, –∞ –Ω–µ webhook_path,
    # –∏ –ø–µ—Ä–µ–¥–∞—ë–º –ø–æ–ª–Ω—ã–π –ø—É–±–ª–∏—á–Ω—ã–π webhook_url.
    #
    # drop_pending_updates=True —Å–±—Ä–æ—Å–∏—Ç –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –∞–ø–¥–µ–π—Ç—ã
    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=URL_PATH,         # –ø—É—Ç—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        webhook_url=WEBHOOK_URL,   # –ø–æ–ª–Ω—ã–π URL, –∫—É–¥–∞ Telegram –±—É–¥–µ—Ç —à–ª–∞—Ç—å
        drop_pending_updates=True,
    )

if __name__ == "__main__":
    main()

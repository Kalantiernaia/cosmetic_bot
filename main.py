import os
from dotenv import load_dotenv
import openai

from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
)

# 1) –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()
TG_TOKEN       = os.environ["TG_TOKEN"]
OPENAI_API_KEY = os.environ["OPENAI_API_KEY"]
RAILWAY_URL    = os.environ.get("RAILWAY_URL")       # –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –Ω–∞ Railway
PORT           = int(os.environ.get("PORT", 8000))   # Railway —Å–∞–º –ø—Ä–æ–±—Ä–æ—Å–∏—Ç PORT

# 2) –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º OpenAI
openai.api_key = OPENAI_API_KEY

# 3) –ü—Ä–æ—Å—Ç–µ–π—à–∏–π handler –¥–ª—è /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ—Å–º–µ—Ç–∏–∫–∏. –ü—Ä–∏—à–ª–∏ –º–Ω–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ ‚Äî —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç."
    )

def main() -> None:
    # 4) –°—Ç—Ä–æ–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = ApplicationBuilder().token(TG_TOKEN).build()

    # 5) –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers
    app.add_handler(CommandHandler("start", start))

    # 6) –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ Railway ‚Äî —Ä–∞–±–æ—Ç–∞–µ–º —á–µ—Ä–µ–∑ webhook
    if RAILWAY_URL:
        app.run_webhook(
            listen="0.0.0.0",
            port=PORT,
            url_path=f"/hook/{TG_TOKEN}",                 # <-- url_path, –Ω–µ path –∏ –Ω–µ webhook_path
            webhook_url=f"{RAILWAY_URL}/hook/{TG_TOKEN}",  # –ø–æ–ª–Ω—ã–π URL –Ω–∞ –≤–∞—à Railway-—Ö—É–∫
        )
    else:
        # 7) –ò–Ω–∞—á–µ –≤ –ª–æ–∫–∞–ª–µ ‚Äî polling
        app.run_polling()

if __name__ == "__main__":
    main()
